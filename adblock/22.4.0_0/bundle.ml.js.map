{"version":3,"file":"bundle.ml.js","sources":["../../node_modules/proxy-pants/esm/proxy.js","../../node_modules/proxy-pants/esm/function.js","../../node_modules/proxy-pants/esm/bound.js","../../node_modules/proxy-pants/esm/object.js","../../node_modules/proxy-pants/esm/secure.js","../../lib/content/environment.js","../../lib/content/utils/env.js","../../node_modules/transform-once/esm/index.js","../../lib/content/utils/transformer.js","../../node_modules/proxy-pants/esm/array.js","../../node_modules/proxy-pants/esm/globals.js","../../node_modules/proxy-pants/esm/chain.js","../../lib/content/$.js","../../lib/content/utils/dom.js","../../lib/content/behavioral/simulate-event-poc.js","../../lib/content/utils/general.js","../../lib/content/introspection/debug.js","../../lib/content/introspection/log.js","../../lib/content/introspection/race.js","../../lib/content/conditional-hiding/hide-if-contains.js","../../lib/content/conditional-hiding/hide-if-contains-and-matches-style.js","../../lib/content/conditional-hiding/hide-if-contains-image.js","../../lib/content/conditional-hiding/hide-if-contains-similar-text.js","../../lib/content/conditional-hiding/hide-if-contains-visible-text.js","../../lib/content/conditional-hiding/hide-if-has-and-matches-style.js","../../lib/content/conditional-hiding/hide-if-labelled-by.js","../../lib/content/introspection/profile.js","../../lib/content/conditional-hiding/hide-if-matches-xpath.js","../../lib/content/conditional-hiding/hide-if-graph-matches.js","../../lib/webext/ml.js"],"sourcesContent":["const $ = Proxy;\nexport {$ as Proxy};\n","import {Proxy} from './proxy.js';\n\nconst {apply: a, bind: b, call: c} = Function;\nexport const apply = c.bind(a);\nexport const bind = c.bind(b);\nexport const call = c.bind(c);\n\nconst applierHandler = {\n  get(target, name) {\n    return bind(a, target[name]);\n  }\n};\nexport const applier = target => new Proxy(target, applierHandler);\n\nconst callerHandler = {\n  get(target, name) {\n    return bind(c, target[name]);\n  }\n};\nexport const caller = target => new Proxy(target, callerHandler);\n\nexport const proxy = (source, target) => new Proxy(source, {\n  apply: (_, self, args) => apply(target, self, args)\n});\n","import {Proxy} from './proxy.js';\nimport {bind} from './function.js';\n\nconst handler = {\n  get(target, name) {\n    return bind(target[name], target);\n  }\n};\nexport const bound = target => new Proxy(target, handler);\n","import {bound} from './bound.js';\nimport {caller} from './function.js';\n\nconst {\n  assign,\n  defineProperties,\n  freeze,\n  getOwnPropertyDescriptor,\n  getOwnPropertyDescriptors,\n  getPrototypeOf\n} = bound(Object);\n\nconst {hasOwnProperty} = caller({});\n\nexport {\n  assign,\n  defineProperties,\n  freeze,\n  getOwnPropertyDescriptor,\n  getOwnPropertyDescriptors,\n  getPrototypeOf,\n  hasOwnProperty\n};\n","import {Proxy} from './proxy.js';\nimport {\n  defineProperties,\n  freeze,\n  getOwnPropertyDescriptors,\n} from './object.js';\n\nconst {species} = Symbol;\n\nconst handler = {\n  get(target, name) {\n    const Native = target[name];\n    class Secure extends Native {}\n\n    const proto = getOwnPropertyDescriptors(Native.prototype);\n    delete proto.constructor;\n    freeze(defineProperties(Secure.prototype, proto));\n\n    const statics = getOwnPropertyDescriptors(Native);\n    delete statics.length;\n    delete statics.prototype;\n    statics[species] = {value: Secure};\n    return freeze(defineProperties(Secure, statics));\n  }\n};\n\nexport const secure = target => new Proxy(target, handler);\n","/**\n * @typedef {object} Environment\n * @property {Array.<Array>} debugCSSProperties Highlighting options.\n * CSS properties to be applied to the targeted element.\n * @property {string} world Target injection world. 'ISOLATED' or 'MAIN'.\n */\n\n/**\n * A configuration object passed by integrators.\n * @type {Environment}\n * @private\n */\n// eslint-disable-next-line no-undef\nexport const libEnvironment = typeof environment !== \"undefined\" ? environment :\n                                                                   {};\n","/* global chrome, browser, globalThis */\n\nimport {bound} from \"proxy-pants/bound\";\nimport {secure} from \"proxy-pants/secure\";\nimport {libEnvironment} from \"../environment.js\";\n\nif (typeof globalThis === \"undefined\")\n  window.globalThis = window;\n\nconst {apply, ownKeys} = bound(Reflect);\n\nconst worldEnvDefined = \"world\" in libEnvironment;\nconst isIsolatedWorld = worldEnvDefined && libEnvironment.world === \"ISOLATED\";\nconst isMainWorld = worldEnvDefined && libEnvironment.world === \"MAIN\";\nconst isChrome = typeof chrome === \"object\" && !!chrome.runtime;\nconst isOtherThanChrome = typeof browser === \"object\" && !!browser.runtime;\nconst isExtensionContext = !isMainWorld &&\n  (isIsolatedWorld || isChrome || isOtherThanChrome);\nconst copyIfExtension = value => isExtensionContext ?\n  value :\n  create(value, getOwnPropertyDescriptors(value));\n\nconst {\n  create,\n  defineProperties,\n  defineProperty,\n  freeze,\n  getOwnPropertyDescriptor,\n  getOwnPropertyDescriptors\n} = bound(Object);\n\nconst invokes = bound(globalThis);\nconst classes = isExtensionContext ? globalThis : secure(globalThis);\nconst {Map, RegExp, Set, WeakMap, WeakSet} = classes;\n\nconst augment = (source, target, method = null) => {\n  const known = ownKeys(target);\n  for (const key of ownKeys(source)) {\n    if (known.includes(key))\n      continue;\n\n    const descriptor = getOwnPropertyDescriptor(source, key);\n    if (method && \"value\" in descriptor) {\n      const {value} = descriptor;\n      if (typeof value === \"function\")\n        descriptor.value = method(value);\n    }\n    defineProperty(target, key, descriptor);\n  }\n};\n\nconst primitive = name => {\n  const Super = classes[name];\n  class Class extends Super {}\n  const {toString, valueOf} = Super.prototype;\n  defineProperties(Class.prototype, {\n    toString: {value: toString},\n    valueOf: {value: valueOf}\n  });\n  const type = name.toLowerCase();\n  const method = callback => function() {\n    const result = apply(callback, this, arguments);\n    return typeof result === type ? new Class(result) : result;\n  };\n  augment(Super, Class, method);\n  augment(Super.prototype, Class.prototype, method);\n  return Class;\n};\n\nconst variables = freeze({\n  frozen: new WeakMap(),\n  hidden: new WeakSet(),\n  iframePropertiesToAbort: {\n    read: new Set(),\n    write: new Set()\n  },\n  abortedIframes: new WeakMap()\n});\n\nconst startsCapitalized = new RegExp(\"^[A-Z]\");\n\n// all default classes/namespaces that must be secured upfront when\n// the environment is not executing in an isolated world\nexport default new Proxy(new Map([\n  // custom environment variables\n  [\"chrome\", (\n    isExtensionContext && (\n      (isChrome && chrome) ||\n      (isOtherThanChrome && browser)\n    )\n  ) || void 0],\n  [\"isExtensionContext\", isExtensionContext],\n  [\"variables\", variables],\n  // secured references and classes\n  [\"console\", copyIfExtension(console)],\n  [\"document\", globalThis.document],\n  [\"performance\", copyIfExtension(performance)],\n  [\"JSON\", copyIfExtension(JSON)],\n  [\"Map\", Map],\n  [\"Math\", copyIfExtension(Math)],\n  [\"Number\", isExtensionContext ? Number : primitive(\"Number\")],\n  [\"RegExp\", RegExp],\n  [\"Set\", Set],\n  [\"String\", isExtensionContext ? String : primitive(\"String\")],\n  [\"WeakMap\", WeakMap],\n  [\"WeakSet\", WeakSet],\n  // no need to secure but it surely helps if we trust native references\n  [\"MouseEvent\", MouseEvent]\n]), {\n  get(map, key) {\n    if (map.has(key))\n      return map.get(key);\n\n    let value = globalThis[key];\n    if (typeof value === \"function\")\n      value = (startsCapitalized.test(key) ? classes : invokes)[key];\n\n    map.set(key, value);\n    return value;\n  },\n  has(map, key) {\n    return map.has(key);\n  }\n});\n","/*! (c) Andrea Giammarchi - ISC */\n\n// no-op WeakValue mock as WeakRef support is still too little\n// use https://github.com/WebReflection/weak-value#readme otherwise\nclass WeakValue {\n  has() { return false; }\n  set() {}\n}\n\nconst helpers = {WeakSet, WeakMap, WeakValue};\nconst {apply} = Reflect;\n\nexport default function (callback) {'use strict';\n  const {WeakSet, WeakMap, WeakValue} = (this || helpers);\n  const ws = new WeakSet;\n  const wm = new WeakMap;\n  const wv = new WeakValue;\n  return function (any) {\n    if (ws.has(any))\n      return any;\n\n    if (wm.has(any))\n      return wm.get(any);\n\n    if (wv.has(any))\n      return wv.get(any);\n\n    const value = apply(callback, this, arguments);\n    ws.add(value);\n    if (value !== any)\n      (typeof any === 'object' && any ? wm : wv).set(any, value);\n    return value;\n  };\n};\n","// this is required by $ so it cannot be \"magic\" or circular dependency happens\nimport env from \"./env.js\";\nimport transformOnce from \"transform-once\";\n\nconst {Map, WeakMap, WeakSet, setTimeout} = env;\n\nlet cleanup = true;\nlet cleanUpCallback = map => {\n  map.clear();\n  cleanup = !cleanup;\n};\n\nexport default transformOnce.bind({\n  WeakMap,\n  WeakSet,\n  // this allows multiple $(primitives) and it cleans references later on\n  // basically a WeakRef implementation based on a single, shared, timer\n  WeakValue: class extends Map {\n    set(key, value) {\n      if (cleanup) {\n        cleanup = !cleanup;\n        setTimeout(cleanUpCallback, 0, this);\n      }\n      return super.set(key, value);\n    }\n  }\n});\n","import {caller} from './function.js';\n\nconst {concat, includes, join, reduce, unshift} = caller([]);\nexport {concat, includes, join, reduce, unshift};\n","import {secure} from './secure.js';\n\nconst {Map, WeakMap} = secure(globalThis);\nexport {Map, WeakMap};\n","import {apply, bind, call} from './function.js';\nimport {assign, getOwnPropertyDescriptors, getPrototypeOf} from './object.js';\nimport {unshift} from './array.js';\nimport {Map} from './globals.js';\n\nconst map = new Map;\nconst descriptors = target => {\n  const chain = [];\n  let current = target;\n  while (current) {\n    if (map.has(current))\n      unshift(chain, map.get(current));\n    else {\n      const descriptors = getOwnPropertyDescriptors(current);\n      map.set(current, descriptors);\n      unshift(chain, descriptors);\n    }\n    current = getPrototypeOf(current);\n  }\n  unshift(chain, {});\n  return apply(assign, null, chain);\n};\n\nexport const chain = source => {\n  const target = typeof source === 'function' ? source.prototype : source;\n  const chained = descriptors(target);\n  const handler = {\n    get(target, key) {\n      if (key in chained) {\n        const {value, get} = chained[key];\n        if (get)\n          return call(get, target);\n        if (typeof value === 'function')\n          return bind(value, target);\n      }\n      return target[key];\n    },\n    set(target, key, value) {\n      if (key in chained) {\n        const {set} = chained[key];\n        if (set) {\n          call(set, target, value);\n          return true;\n        }\n      }\n      target[key] = value;\n      return true;\n    }\n  };\n  return target => new Proxy(target, handler);\n};\n","/* global chrome, browser, globalThis */\n\nimport env from \"./utils/env.js\";\nimport transformer from \"./utils/transformer.js\";\nimport {call} from \"proxy-pants/function\";\nimport {chain} from \"proxy-pants/chain\";\n\nconst {\n  isExtensionContext,\n  Array,\n  Number,\n  String,\n  Object\n} = env;\n\nconst {isArray} = Array;\nconst {getOwnPropertyDescriptor, setPrototypeOf} = Object;\n\nconst {toString} = Object.prototype;\nconst {slice} = String.prototype;\nconst getBrand = value => call(slice, call(toString, value), 8, -1);\n\nconst {get: nodeType} = getOwnPropertyDescriptor(Node.prototype, \"nodeType\");\n\n// the main difference between secured classes and chained prototypes\n// is that chained values are not something we construct at all, it's\n// something we deal with instead, so that proxies are a better option,\n// or better, are less obtrusive if their proxy don't leak in the wild.\nconst chained = isExtensionContext ? {} : {\n  Attr: chain(Attr),\n  CanvasRenderingContext2D: chain(CanvasRenderingContext2D),\n  CSSStyleDeclaration: chain(CSSStyleDeclaration),\n  Document: chain(Document),\n  Element: chain(Element),\n  HTMLCanvasElement: chain(HTMLCanvasElement),\n  HTMLElement: chain(HTMLElement),\n  HTMLImageElement: chain(HTMLImageElement),\n  HTMLScriptElement: chain(HTMLScriptElement),\n  MutationRecord: chain(MutationRecord),\n  Node: chain(Node),\n  ShadowRoot: chain(ShadowRoot),\n\n  // this is some test env shenanigan\n  get CSS2Properties() {\n    return chained.CSSStyleDeclaration;\n  }\n};\n\nconst upgrade = (value, hint) => {\n  if (hint !== \"Element\" && hint in chained)\n    return chained[hint](value);\n\n  if (isArray(value))\n    return setPrototypeOf(value, Array.prototype);\n\n  const brand = getBrand(value);\n  if (brand in chained)\n    return chained[brand](value);\n\n  if (brand in env)\n    return setPrototypeOf(value, env[brand].prototype);\n\n  if (\"nodeType\" in value) {\n    switch (call(nodeType, value)) {\n      case 1:\n        if (!(hint in chained))\n          throw new Error(\"unknown hint \" + hint);\n        return chained[hint](value);\n      case 2:\n        return chained.Attr(value);\n      case 3:\n        return chained.Node(value);\n      case 9:\n        return chained.Document(value);\n    }\n  }\n\n  throw new Error(\"unknown brand \" + brand);\n};\n\n/* eslint valid-jsdoc: 0 */\n/** @type {<T>(t:T)=>t} Any value that can be upgraded or wrapped */\nexport default isExtensionContext ?\n  value => (value === window || value === globalThis ? env : value) :\n  transformer((value, hint = \"Element\") => {\n    if (value === window || value === globalThis)\n      return env;\n\n    switch (typeof value) {\n      case \"object\":\n        return value && upgrade(value, hint);\n\n      case \"string\":\n        return new String(value);\n\n      case \"number\":\n        return new Number(value);\n\n      default:\n        throw new Error(\"unsupported value\");\n    }\n  });\n","/* global checkElement:readonly */\n\nimport $ from \"../$.js\";\nimport {apply, bind} from \"proxy-pants/function\";\n\nimport {libEnvironment} from \"../environment.js\";\n\nlet {\n  document,\n  getComputedStyle,\n  isExtensionContext,\n  variables,\n  Array,\n  MutationObserver,\n  Object,\n  XPathEvaluator,\n  XPathExpression,\n  XPathResult\n} = $(window);\n\n// ensures that $$ is bound only in environments where document exists\nlet {querySelectorAll} = document;\nexport let $$ = querySelectorAll && bind(querySelectorAll, document);\n\n// make `new XPathExpression()` operations safe\nconst {assign, setPrototypeOf} = Object;\n\nclass $XPathExpression extends XPathExpression {\n  evaluate(...args) {\n    return setPrototypeOf(\n      apply(super.evaluate, this, args),\n      XPathResult.prototype\n    );\n  }\n}\n\nclass $XPathEvaluator extends XPathEvaluator {\n  createExpression(...args) {\n    return setPrototypeOf(\n      apply(super.createExpression, this, args),\n      $XPathExpression.prototype\n    );\n  }\n}\n\n/**\n * Hides an HTML element by setting its `style` attribute to\n * `display: none !important`.\n *\n * @param {HTMLElement} element The HTML element to hide.\n * @private\n */\nexport function hideElement(element) {\n  if (variables.hidden.has(element))\n    return;\n\n  notifyElementHidden(element);\n\n  variables.hidden.add(element);\n\n  let {style} = $(element);\n  let $style = $(style, \"CSSStyleDeclaration\");\n  let properties = $([]);\n  let {debugCSSProperties} = libEnvironment;\n\n  for (let [key, value] of (debugCSSProperties || [[\"display\", \"none\"]])) {\n    $style.setProperty(key, value, \"important\");\n    properties.push([key, $style.getPropertyValue(key)]);\n  }\n\n  // Listen for changes to the style property and if our values are unset\n  // then reset them.\n  new MutationObserver(() => {\n    for (let [key, value] of properties) {\n      let propertyValue = $style.getPropertyValue(key);\n      let propertyPriority = $style.getPropertyPriority(key);\n      if (propertyValue != value || propertyPriority != \"important\")\n        $style.setProperty(key, value, \"important\");\n    }\n  }).observe(element, {attributes: true,\n                       attributeFilter: [\"style\"]});\n}\n\n/**\n * Notifies the current contentScript that a new element has been hidden.\n * This is done by calling the globally available `checkElement` function\n * and passing the element.\n *\n * @param {HTMLElement} element The HTML element that was hidden.\n * @private\n */\nfunction notifyElementHidden(element) {\n  if (isExtensionContext && typeof checkElement === \"function\")\n    checkElement(element);\n}\n\n/**\n * A callback function to be applied to a node.\n * @callback queryAndApplyCallback\n * @param {Node} node\n * @private\n */\n\n/**\n * The query function. Accepts a callback function\n * which will be called for every node resulted from querying the document.\n * @callback queryAndApply\n * @param {queryAndApplyCallback} cb\n * @private\n */\n\n/**\n * Given a CSS or Xpath selector, returns a query function.\n * @param {string} selector A CSS selector or a Xpath selector which must be\n * described with the following syntax: `xpath(the_actual_selector)`\n * @returns {queryAndApply} The query function. Accepts a callback function\n * which will be called for every node resulted from querying the document.\n * @private\n */\nexport function initQueryAndApply(selector) {\n  let $selector = selector;\n  if ($selector.startsWith(\"xpath(\") &&\n      $selector.endsWith(\")\")) {\n    let xpathQuery = $selector.slice(6, -1);\n    let evaluator = new $XPathEvaluator();\n    let expression = evaluator.createExpression(xpathQuery, null);\n    // do not use ORDERED_NODE_ITERATOR_TYPE or the test env will fail\n    let flag = XPathResult.ORDERED_NODE_SNAPSHOT_TYPE;\n\n    return cb => {\n      if (!cb)\n        return;\n      let result = expression.evaluate(document, flag, null);\n      let {snapshotLength} = result;\n      for (let i = 0; i < snapshotLength; i++)\n        cb(result.snapshotItem(i));\n    };\n  }\n  return cb => $$(selector).forEach(cb);\n}\n\n/**\n * The query function. Retrieves all the nodes in the DOM matching the\n * provided selector.\n * @callback queryAll\n * @returns {Node[]} An array containing all the nodes in the DOM matching\n * the provided selector.\n * @private\n */\n\n/**\n * Given a CSS or Xpath selector, returns a query function.\n * @param {string} selector A CSS selector or a Xpath selector which must be\n * described with the following syntax: `xpath(the_actual_selector)`\n * @returns {queryAll} The query function. Retrieves all the nodes in the DOM\n * matching the provided selector.\n * @private\n */\nexport function initQueryAll(selector) {\n  let $selector = selector;\n  if ($selector.startsWith(\"xpath(\") &&\n      $selector.endsWith(\")\")) {\n    let queryAndApply = initQueryAndApply(selector);\n    return () => {\n      let elements = $([]);\n      queryAndApply(e => elements.push(e));\n      return elements;\n    };\n  }\n  return () => Array.from($$(selector));\n}\n\n/**\n * Hides any HTML element or one of its ancestors matching a CSS selector if\n * it matches the provided condition.\n *\n * @param {function} match The function that provides the matching condition.\n * @param {string} selector The CSS selector that an HTML element must match\n *   for it to be hidden.\n * @param {?string} [searchSelector] The CSS selector that an HTML element\n *   containing the given string must match. Defaults to the value of the\n *   `selector` argument.\n * @returns {MutationObserver} Augmented MutationObserver object. It has a new\n *   function mo.race added to it. This can be used by the snippets to\n *   disconnect the MutationObserver with the racing mechanism.\n *   Used like: mo.race(raceWinner(() => {mo.disconnect();}));\n * @private\n */\nexport function hideIfMatches(match, selector, searchSelector) {\n  if (searchSelector == null)\n    searchSelector = selector;\n\n  let won;\n  const callback = () => {\n    for (const element of $$(searchSelector)) {\n      const closest = $(element).closest(selector);\n      if (closest && match(element, closest)) {\n        won();\n        hideElement(closest);\n      }\n    }\n  };\n  return assign(\n    new MutationObserver(callback),\n    {\n      race(win) {\n        won = win;\n        this.observe(document, {childList: true,\n                                characterData: true,\n                                subtree: true});\n        callback();\n      }\n    }\n  );\n}\n\n/**\n * Check if an element is visible\n *\n * @param {Element} element The element to check visibility of.\n * @param {CSSStyleDeclaration} style The computed style of element.\n * @param {?Element} closest The closest parent to reach.\n * @return {bool} Whether the element is visible.\n * @private\n */\nexport function isVisible(element, style, closest) {\n  let $style = $(style, \"CSSStyleDeclaration\");\n  if ($style.getPropertyValue(\"display\") == \"none\")\n    return false;\n\n  let visibility = $style.getPropertyValue(\"visibility\");\n  if (visibility == \"hidden\" || visibility == \"collapse\")\n    return false;\n\n  if (!closest || element == closest)\n    return true;\n\n  let parent = $(element).parentElement;\n  if (!parent)\n    return true;\n\n  return isVisible(parent, getComputedStyle(parent), closest);\n}\n\n/**\n * Returns the value of the `cssText` property of the object returned by\n * `getComputedStyle` for the given element.\n *\n * If the value of the `cssText` property is blank, this function computes the\n * value out of the properties available in the object.\n *\n * @param {Element} element The element for which to get the computed CSS text.\n *\n * @returns {string} The computed CSS text.\n * @private\n */\nexport function getComputedCSSText(element) {\n  let style = getComputedStyle(element);\n  let {cssText} = style;\n\n  if (cssText)\n    return cssText;\n\n  for (let property of style)\n    cssText += `${property}: ${style[property]}; `;\n\n  return $(cssText).trim();\n}\n","import $ from \"../$.js\";\n\nimport {initQueryAndApply} from \"../utils/dom.js\";\n\nlet {\n  parseInt,\n  setTimeout,\n  Error,\n  MouseEvent,\n  MutationObserver,\n  WeakSet\n} = $(window);\n\n/**\n * Simulate a mouse event on the page.\n * @alias module:content/snippets.simulate-event-poc\n *\n * @param {string} event Pattern that matches the type(s) of event\n * we want to prevent. If the string starts and ends with a slash (`/`),\n * the text in between is treated as a regular expression.\n * @param {string} selector The CSS/Xpath selector that an HTML element must\n * match for the event to be triggered.\n * @param {?string} delay The delay between the moment when the node is inserted\n * and the moment when the event is dispatched.\n *\n * @since Adblock Plus 3.11.2\n */\nexport function simulateEvent(event, selector, delay = \"0\") {\n  if (!event)\n    throw new Error(\"[simulate-event snippet]: No event type provided.\");\n  if (!selector)\n    throw new Error(\"[simulate-event snippet]: No selector provided.\");\n\n  let queryAndApply = initQueryAndApply(selector);\n  let delayInMiliseconds = parseInt(delay, 10);\n  let dispatchedNodes = new WeakSet();\n\n  let observer = new MutationObserver(findNodesAndDispatchEvents);\n  observer.observe(document, {childList: true, subtree: true});\n  findNodesAndDispatchEvents();\n\n  function findNodesAndDispatchEvents() {\n    queryAndApply(node => {\n      if (!dispatchedNodes.has(node)) {\n        dispatchedNodes.add(node);\n        setTimeout(() => {\n          $(node).dispatchEvent(\n            new MouseEvent(event, {bubbles: true, cancelable: true})\n          );\n        }, delayInMiliseconds);\n      }\n    });\n  }\n}\n","import $ from \"../$.js\";\n\nlet {Math, RegExp} = $(window);\n\n/**\n * Escapes regular expression special characters in a string.\n *\n * The returned string may be passed to the `RegExp` constructor to match the\n * original string.\n *\n * @param {string} string The string in which to escape special characters.\n *\n * @returns {string} A new string with the special characters escaped.\n * @private\n */\nfunction regexEscape(string) {\n  return $(string).replace(/[-/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n}\n\n/**\n * Converts a given pattern to a regular expression.\n *\n * @param {string} pattern The pattern to convert. If the pattern begins and\n *   ends with a slash (`/`), the text in between is treated as a regular\n *   expression. If the pattern begins with a slash (`/`) and it ends with a\n *   (`/i`), the text in between is treated as case insensitive regular\n *   expression; otherwise the pattern is treated as raw text.\n *\n * @returns {RegExp} A `RegExp` object based on the given pattern.\n * @private\n */\nexport function toRegExp(pattern) {\n  let {length} = pattern;\n\n  // regexp in /.../ slashes must have at least length of 2\n  if (length > 1 && pattern[0] === \"/\") {\n    let isCaseSensitive = pattern[length - 1] === \"/\";\n    // if not case sensitive, ensure it's not the string \"/i\" itself\n    if (isCaseSensitive || (length > 2 && $(pattern).endsWith(\"/i\"))) {\n      let args = [$(pattern).slice(1, isCaseSensitive ? -1 : -2)];\n      if (!isCaseSensitive)\n        args.push(\"i\");\n\n      return new RegExp(...args);\n    }\n  }\n\n  return new RegExp(regexEscape(pattern));\n}\n\n/**\n * Generates a random alphanumeric ID consisting of 6 base-36 digits\n * from the range 100000..zzzzzz (both inclusive).\n *\n * @returns {string} The random ID.\n * @private\n */\nexport function randomId() {\n  // 2176782336 is 36^6 which mean 6 chars [a-z0-9]\n  // 60466176 is 36^5\n  // 2176782336 - 60466176 = 2116316160. This ensure to always have 6\n  // chars even if Math.random() returns its minimum value 0.0\n  //\n  return $(Math.floor(Math.random() * 2116316160 + 60466176)).toString(36);\n}\n","/**\n * Whether debug mode is enabled.\n * @type {boolean}\n * @private\n */\nlet debugging = false;\n\n/**\n * Tells if the debug mode is inactive.\n * @memberOf module:content/snippets.debug\n * @returns {boolean}\n */\nexport function debug() {\n  return debugging;\n}\n\n/**\n * Enables debug mode.\n * @alias module:content/snippets.debug\n *\n * @example\n * example.com#$#debug; log 'Hello, world!'\n *\n * @since Adblock Plus 3.8\n */\nexport function setDebug() {\n  debugging = true;\n}\n","import $ from \"../$.js\";\nimport {bind} from \"proxy-pants/function\";\n\nimport {debug} from \"./debug.js\";\n\nconst {console} = $(window);\n\nexport const noop = () => {};\n\n/**\n * Logs its arguments to the console.\n *\n * This may be used for testing and debugging.\n *\n * @alias module:content/snippets.log\n *\n * @param {...*} [args] The arguments to log.\n *\n * @since Adblock Plus 3.3\n */\nexport function log(...args) {\n  if (debug())\n    $(args).unshift(\"%c DEBUG\", \"font-weight: bold\");\n\n  console.log(...args);\n}\n\n/**\n * Returns a no-op if debugging mode is off, returns a bound log otherwise.\n * @param {string} name the debugger name (first logged value)\n * @returns {function} either a no-op function or the logger one\n */\nexport function getDebugger(name) {\n  return bind(debug() ? log : noop, null, name);\n}\n","import $ from \"../$.js\";\nimport {noop} from \"./log.js\";\nimport {getDebugger} from \"../introspection/log.js\";\n\nlet {Array, Error, Map, parseInt} = $(window);\n\nlet stack = null;\nlet won = null;\n\n// #$#race start; thing1; thing2; race stop;\n\n/**\n * Delimits a race among filters, to be able to disable competing filters when\n * any of them \"wins the race\". `#$#race start; filter1; filter2; race end;`\n * @param {string} action either `start` or `stop` the race.\n * @param {string} winners the amount of possible race's winners: 1 by default.\n */\nexport function race(action, winners = \"1\") {\n  switch (action) {\n    case \"start\":\n      stack = {\n        winners: parseInt(winners, 10) || 1,\n        participants: new Map()\n      };\n      won = new Array();\n      break;\n    case \"end\":\n    case \"finish\":\n    case \"stop\":\n      stack = null;\n      for (let win of won)\n        win();\n      won = null;\n      break;\n    default:\n      throw new Error(`Invalid action: ${action}`);\n  }\n}\n\n/**\n * Returns a function that, when a race is happening, can mark a winner,\n * by invoking all callbacks passed for every other snippet that lost the race.\n * @param {string} name the snippet name that is racing.\n * @param {function} lose a callback that, once invoked, will stop the snippet.\n * @returns {function} a callback to invoke whenever a match happens.\n */\nexport function raceWinner(name, lose) {\n  // without races, every invoke is a noop\n  if (stack === null)\n    return noop;\n\n  // within races though, trap the current stack and winners because more than\n  // a race could be defined for the same domains / filters\n  let current = stack;\n  let {participants} = current;\n  participants.set(win, lose);\n\n  // return a function that, once invoked, becomes a noop every other time and\n  // also invokes every other functions in the race to stop them as loosers\n  return win;\n\n  function win() {\n    // make the noop case the fastest one for any further invoke\n    if (current.winners < 1)\n      return;\n\n    let debugLog = getDebugger(\"race\");\n    debugLog(`${name} won the race`);\n\n    // in case a snippet wins while the race is still happening, queue them all\n    // so that unknown racing snippets get a chance to be disabled later on.\n    // i.e. race start 2; winner1; looser2; winner3; looser4; race end;\n    if (current === stack) {\n      won.push(win);\n    }\n    else {\n      participants.delete(win);\n      if (--current.winners < 1) {\n        for (let looser of participants.values())\n          looser();\n\n        participants.clear();\n      }\n    }\n  }\n}\n","import $ from \"../$.js\";\n\nimport {hideIfMatches} from \"../utils/dom.js\";\nimport {toRegExp} from \"../utils/general.js\";\nimport {raceWinner} from \"../introspection/race.js\";\n\n/**\n * Hides any HTML element or one of its ancestors matching a CSS selector if\n * the text content of the element contains a given string.\n * @alias module:content/snippets.hide-if-contains\n *\n * @param {string} search The string to look for in HTML elements. If the\n *   string begins and ends with a slash (`/`), the text in between is treated\n *   as a regular expression.\n * @param {string} selector The CSS selector that an HTML element must match\n *   for it to be hidden.\n * @param {?string} [searchSelector] The CSS selector that an HTML element\n *   containing the given string must match. Defaults to the value of the\n *   `selector` argument.\n *\n * @since Adblock Plus 3.3\n */\nexport function hideIfContains(search, selector = \"*\", searchSelector = null) {\n  let re = toRegExp(search);\n\n  const mo = hideIfMatches(element => re.test($(element).textContent),\n                           selector,\n                           searchSelector);\n  mo.race(raceWinner(\n    \"hide-if-contains\",\n    () => {\n      mo.disconnect();\n    }\n  ));\n}\n","import $ from \"../$.js\";\n\nimport {$$, getComputedCSSText, hideElement} from \"../utils/dom.js\";\nimport {raceWinner} from \"../introspection/race.js\";\nimport {toRegExp} from \"../utils/general.js\";\n\nlet {MutationObserver} = $(window);\n\n/**\n * Hides any HTML element or one of its ancestors matching a CSS selector if\n * the text content of the element contains a given string and, optionally, if\n * the element's computed style contains a given string.\n * @alias module:content/snippets.hide-if-contains-and-matches-style\n *\n * @param {string} search The string to look for in HTML elements. If the\n *   string begins and ends with a slash (`/`), the text in between is treated\n *   as a regular expression.\n * @param {string} selector The CSS selector that an HTML element must match\n *   for it to be hidden.\n * @param {string?} [searchSelector] The CSS selector that an HTML element\n *   containing the given string must match. Defaults to the value of the\n *   `selector` argument.\n * @param {string?} [style] The string that the computed style of an HTML\n *   element matching `selector` must contain. If the string begins and ends\n *   with a slash (`/`), the text in between is treated as a regular\n *   expression.\n * @param {string?} [searchStyle] The string that the computed style of an HTML\n *   element matching `searchSelector` must contain. If the string begins and\n *   ends with a slash (`/`), the text in between is treated as a regular\n *   expression.\n *\n * @since Adblock Plus 3.3.2\n */\nexport function hideIfContainsAndMatchesStyle(\n  search,\n  selector = \"*\",\n  searchSelector = null,\n  style = null,\n  searchStyle = null\n) {\n  if (searchSelector == null)\n    searchSelector = selector;\n\n  let searchRegExp = toRegExp(search);\n\n  let styleRegExp = style ? toRegExp(style) : null;\n  let searchStyleRegExp = searchStyle ? toRegExp(searchStyle) : null;\n\n  let callback = () => {\n    for (let element of $$(searchSelector)) {\n      if (searchRegExp.test($(element).textContent) &&\n          (!searchStyleRegExp ||\n           searchStyleRegExp.test(getComputedCSSText(element)))) {\n        let closest = $(element).closest(selector);\n        if (closest && (!styleRegExp ||\n                        styleRegExp.test(getComputedCSSText(closest)))) {\n          win();\n          hideElement(closest);\n        }\n      }\n    }\n  };\n\n  let mo = new MutationObserver(callback);\n  let win = raceWinner(\n    \"hide-if-contains-and-matches-style\",\n    () => mo.disconnect()\n  );\n  mo.observe(document, {childList: true, characterData: true, subtree: true});\n  callback();\n}\n","import $ from \"../$.js\";\n\nimport {$$, hideElement} from \"../utils/dom.js\";\nimport {raceWinner} from \"../introspection/race.js\";\nimport {toRegExp} from \"../utils/general.js\";\n\nlet {\n  clearTimeout,\n  fetch,\n  getComputedStyle,\n  setTimeout,\n  Map,\n  MutationObserver,\n  Uint8Array\n} = $(window);\n\n/**\n * Hides any HTML element or one of its ancestors matching a CSS selector if\n * the background image of the element matches a given pattern.\n * @alias module:content/snippets.hide-if-contains-image\n *\n * @param {string} search The pattern to look for in the background images of\n *   HTML elements. This must be the hexadecimal representation of the image\n *   data for which to look. If the string begins and ends with a slash (`/`),\n *   the text in between is treated as a regular expression.\n * @param {string} selector The CSS selector that an HTML element must match\n *   for it to be hidden.\n * @param {?string} [searchSelector] The CSS selector that an HTML element\n *   containing the given pattern must match. Defaults to the value of the\n *   `selector` argument.\n *\n * @since Adblock Plus 3.4.2\n */\nexport function hideIfContainsImage(search, selector, searchSelector) {\n  if (searchSelector == null)\n    searchSelector = selector;\n\n  let searchRegExp = toRegExp(search);\n\n  let callback = () => {\n    for (let element of $$(searchSelector)) {\n      let style = getComputedStyle(element);\n      let match = $(style[\"background-image\"]).match(/^url\\(\"(.*)\"\\)$/);\n      if (match) {\n        fetchContent(match[1]).then(content => {\n          if (searchRegExp.test(uint8ArrayToHex(new Uint8Array(content)))) {\n            let closest = $(element).closest(selector);\n            if (closest) {\n              win();\n              hideElement(closest);\n            }\n          }\n        });\n      }\n    }\n  };\n\n  let mo = new MutationObserver(callback);\n  let win = raceWinner(\n    \"hide-if-contains-image\",\n    () => mo.disconnect()\n  );\n  mo.observe(document, {childList: true, subtree: true});\n  callback();\n}\n\n\n/**\n * @typedef {object} FetchContentInfo\n * @property {function} remove\n * @property {Promise} result\n * @property {number} timer\n * @private\n */\n\n/**\n * @type {Map.<string, FetchContentInfo>}\n * @private\n */\nlet fetchContentMap = new Map();\n\n\n/**\n * Returns a potentially already resolved fetch auto cleaning, if not requested\n * again, after a certain amount of milliseconds.\n *\n * The resolved fetch is by default `arrayBuffer` but it can be any other kind\n * through the configuration object.\n *\n * @param {string} url The url to fetch\n * @param {object} [options] Optional configuration options.\n *                            By default is {as: \"arrayBuffer\", cleanup: 60000}\n * @param {string} [options.as] The fetch type: \"arrayBuffer\", \"json\", \"text\"..\n * @param {number} [options.cleanup] The cache auto-cleanup delay in ms: 60000\n *\n * @returns {Promise} The fetched result as Uint8Array|string.\n *\n * @example\n * fetchContent('https://any.url.com').then(arrayBuffer => { ... })\n * @example\n * fetchContent('https://a.com', {as: 'json'}).then(json => { ... })\n * @example\n * fetchContent('https://a.com', {as: 'text'}).then(text => { ... })\n * @private\n */\nfunction fetchContent(url, {as = \"arrayBuffer\", cleanup = 60000} = {}) {\n  // make sure the fetch type is unique as the url fetching text or arrayBuffer\n  // will fetch same url twice but it will resolve it as expected instead of\n  // keeping the fetch potentially hanging forever.\n  let uid = as + \":\" + url;\n  let details = fetchContentMap.get(uid) || {\n    remove: () => fetchContentMap.delete(uid),\n    result: null,\n    timer: 0\n  };\n  clearTimeout(details.timer);\n  details.timer = setTimeout(details.remove, cleanup);\n  if (!details.result) {\n    details.result = fetch(url).then(res => res[as]()).catch(details.remove);\n    fetchContentMap.set(uid, details);\n  }\n  return details.result;\n}\n\n/**\n * Converts a number to its hexadecimal representation.\n *\n * @param {number} number The number to convert.\n * @param {number} [length] The <em>minimum</em> length of the hexadecimal\n *   representation. For example, given the number `1024` and the length `8`,\n *   the function returns the value `\"00000400\"`.\n *\n * @returns {string} The hexadecimal representation of the given number.\n * @private\n */\nfunction toHex(number, length = 2) {\n  let hex = $(number).toString(16);\n\n  if (hex.length < length)\n    hex = $(\"0\").repeat(length - hex.length) + hex;\n\n  return hex;\n}\n\n/**\n * Converts a `Uint8Array` object into its hexadecimal representation.\n *\n * @param {Uint8Array} uint8Array The `Uint8Array` object to convert.\n *\n * @returns {string} The hexadecimal representation of the given `Uint8Array`\n *   object.\n * @private\n */\nfunction uint8ArrayToHex(uint8Array) {\n  return uint8Array.reduce((hex, byte) => hex + toHex(byte), \"\");\n}\n","import $ from \"../$.js\";\n\nimport {$$, hideElement} from \"../utils/dom.js\";\nimport {raceWinner} from \"../introspection/race.js\";\nimport {getDebugger} from \"../introspection/log.js\";\n\nconst {parseFloat, Math, MutationObserver, WeakSet} = $(window);\nconst {min} = Math;\n\n// https://webreflection.blogspot.com/2009/02/levenshtein-algorithm-revisited-25.html\nconst ld = (a, b) => {\n  const len1 = a.length + 1;\n  const len2 = b.length + 1;\n  const d = [[0]];\n  let i = 0;\n  let I = 0;\n\n  while (++i < len2)\n    d[0][i] = i;\n\n  i = 0;\n  while (++i < len1) {\n    const c = a[I];\n    let j = 0;\n    let J = 0;\n    d[i] = [i];\n    while (++j < len2) {\n      d[i][j] = min(d[I][j] + 1, d[i][J] + 1, d[I][J] + (c != b[J]));\n      ++J;\n    }\n    ++I;\n  }\n  return d[len1 - 1][len2 - 1];\n};\n\n/**\n * Hides any HTML element matching a CSS selector if the text content\n * contains someting similar to the string to search for.\n * @alias module:content/snippets.hide-if-contains-similar-text\n *\n * @param {string} search The string to look for, such as \"Sponsored\" or\n *   similar.\n * @param {string} selector The CSS selector that an HTML element must match\n *   for it to be hidden.\n * @param {?string} [searchSelector] The CSS selector that an HTML element\n *   containing the given string must match. Defaults to the value of the\n *   `selector` argument.\n * @param {?number} [ignoreChars] The amount of extra chars to ignore while\n *   looking for the text, allowing possible intermediate chars. If the\n *   `search` string is \"Sponsored\" and `ignoreChars` is 1, elements containing\n *   \"zSponsored\", as example, will be considered a match too.\n * @param {?number} [maxSearches] The amount of searches to perform. By default\n *   the search is performed through the whole length of the found text. Pass\n *   an integer to never perform more than X searches per node. As example,\n *   if the word to look for is usually at the beginning, use 1 or 2 to\n *   improve performance while surfing.\n *\n * @since @eyeo/snippets 0.5.2\n */\nexport function hideIfContainsSimilarText(\n  search, selector,\n  searchSelector = null,\n  ignoreChars = 0,\n  maxSearches = 0\n) {\n  const visitedNodes = new WeakSet();\n  const debugLog = getDebugger(\"hide-if-contains-similar-text\");\n  const $search = $(search);\n  const {length} = $search;\n  const chars = length + parseFloat(ignoreChars) || 0;\n  const find = $([...$search]).sort();\n  const guard = parseFloat(maxSearches) || Infinity;\n\n  if (searchSelector == null)\n    searchSelector = selector;\n\n  debugLog(\"Looking for similar text: \" + $search);\n\n  const callback = () => {\n    for (const element of $$(searchSelector)) {\n      if (visitedNodes.has(element))\n        continue;\n\n      visitedNodes.add(element);\n      const {innerText} = $(element);\n      const loop = min(guard, innerText.length - chars + 1);\n      for (let i = 0; i < loop; i++) {\n        const str = $(innerText).substr(i, chars);\n        const distance = ld(find, $([...str]).sort()) - ignoreChars;\n        if (distance <= 0) {\n          const closest = $(element).closest(selector);\n          debugLog(\"Found similar text: \" + $search, closest);\n          if (closest) {\n            win();\n            hideElement(closest);\n            break;\n          }\n        }\n      }\n    }\n  };\n\n  let mo = new MutationObserver(callback);\n  let win = raceWinner(\n    \"hide-if-contains-similar-text\",\n    () => mo.disconnect()\n  );\n  mo.observe(document, {childList: true, characterData: true, subtree: true});\n  callback();\n}\n","import $ from \"../$.js\";\n\nimport {hideIfMatches, isVisible} from \"../utils/dom.js\";\nimport {toRegExp} from \"../utils/general.js\";\nimport {log} from \"../introspection/log.js\";\nimport {debug} from \"../introspection/debug.js\";\nimport {raceWinner} from \"../introspection/race.js\";\n\nlet {getComputedStyle, Map, WeakSet, parseFloat} = $(window);\n\nconst {ELEMENT_NODE, TEXT_NODE} = Node;\n\n/**\n * Hides any HTML element matching a CSS selector if the visible text content\n * of the element contains a given string.\n * @alias module:content/snippets.hide-if-contains-visible-text\n *\n * @param {string} search The string to match to the visible text. Is considered\n *   visible text that isn't hidden by CSS properties or other means.\n *   If the string begins and ends with a slash (`/`), the text in between is\n *   treated as a regular expression.\n * @param {string} selector The CSS selector that an HTML element must match\n *   for it to be hidden.\n * @param {?string} [searchSelector] The CSS selector that an HTML element\n *   containing the given string must match. Defaults to the value of the\n *   `selector` argument.\n * @param {?Array.<string>} [attributes] The CSS attributes a computed style\n *   map of a node should have in order to consider that node hidden.\n *   Syntax: <key>:<value>, where <value> can be a string or a regex (if it\n *   starts and ends with a `/`).\n *\n * @since Adblock Plus 3.11.4\n */\nexport function hideIfContainsVisibleText(search, selector,\n                                          searchSelector = null,\n                                          ...attributes) {\n  let entries = $([]);\n  const optionalParameters = new Map([\n    [\"-snippet-box-margin\", \"2\"]\n  ]);\n\n  for (let attr of attributes) {\n    attr = $(attr);\n    let markerIndex = attr.indexOf(\":\");\n    if (markerIndex < 0)\n      continue;\n\n    let key = attr.slice(0, markerIndex).trim().toString();\n    let value = attr.slice(markerIndex + 1).trim().toString();\n\n    if (key && value) {\n      if (optionalParameters.has(key))\n        optionalParameters.set(key, value);\n      else\n        entries.push([key, value]);\n    }\n  }\n\n  let defaultEntries = $([\n    [\"opacity\", \"0\"],\n    [\"font-size\", \"0px\"],\n    // if color is transparent...\n    [\"color\", \"rgba(0, 0, 0, 0)\"]\n  ]);\n\n  let attributesMap = new Map(defaultEntries.concat(entries));\n\n  /**\n   * Determines if the text inside the element is visible.\n   *\n   * @param {Element} element The element we are checking.\n   * @param {?CSSStyleDeclaration} style The computed style of element. If\n   *   falsey it will be queried.\n   * @returns {bool} Whether the text is visible.\n   * @private\n   */\n  function isTextVisible(element, style) {\n    if (!style)\n      style = getComputedStyle(element);\n\n    style = $(style);\n\n    for (const [key, value] of attributesMap) {\n      let valueAsRegex = toRegExp(value);\n      if (valueAsRegex.test(style.getPropertyValue(key)))\n        return false;\n    }\n\n    let color = style.getPropertyValue(\"color\");\n    if (style.getPropertyValue(\"background-color\") == color)\n      return false;\n\n    return true;\n  }\n\n  /**\n   * Check if a pseudo element has visible text via `content`.\n   *\n   * @param {Element} element The element to check visibility of.\n   * @param {string} pseudo The `::before` or `::after` pseudo selector.\n   * @return {string} The pseudo content or an empty string.\n   * @private\n   */\n  function getPseudoContent(element, pseudo) {\n    let style = getComputedStyle(element, pseudo);\n    if (!isVisible(element, style) || !isTextVisible(element, style))\n      return \"\";\n\n    let {content} = $(style);\n    if (content && content !== \"none\") {\n      let strings = $([]);\n\n      // remove all strings, in quotes, including escaping chars, putting\n      // instead `\\x01${string-index}` in place, which is not valid CSS,\n      // so that it's safe to parse it back at the end of the operation.\n      content = $(content).trim().replace(\n        /([\"'])(?:(?=(\\\\?))\\2.)*?\\1/g,\n        value => `\\x01${strings.push($(value).slice(1, -1)) - 1}`\n      );\n\n      // replace attr(...) with the attribute value or an empty string,\n      // ignoring units and fallback values, as these do not work, or have,\n      // any meaning in the CSS `content` property value.\n      content = content.replace(\n        /\\s*attr\\(\\s*([^\\s,)]+)[^)]*?\\)\\s*/g,\n        (_, name) => $(element).getAttribute(name) || \"\"\n      );\n\n      // replace back all `\\x01${string-index}` values with their corresponding\n      // strings, so that the outcome is a real, cleaned up, `content` value.\n      return content.replace(\n        /\\x01(\\d+)/g,\n        (_, index) => strings[index]);\n    }\n    return \"\";\n  }\n\n  /**\n   * Checks if child element is 100% included in the parent element.\n   *\n   * @param {Element} childNode\n   * @param {Element} parentNode\n   * @param {Object?} conf\n   * @param {Number?} conf.boxMargin\n   * @returns {boolean}\n   */\n  function isContained(childNode, parentNode, {boxMargin = 2} = {}) {\n    const child = $(childNode).getBoundingClientRect();\n    const parent = $(parentNode).getBoundingClientRect();\n    const stretchedParent = {\n      left: parent.left - boxMargin,\n      right: parent.right + boxMargin,\n      top: parent.top - boxMargin,\n      bottom: parent.bottom + boxMargin\n    };\n    return (\n      (stretchedParent.left <= child.left &&\n         child.left <= stretchedParent.right &&\n        stretchedParent.top <= child.top &&\n         child.top <= stretchedParent.bottom) &&\n      (stretchedParent.top <= child.bottom &&\n         child.bottom <= stretchedParent.bottom &&\n        stretchedParent.left <= child.right &&\n         child.right <= stretchedParent.right)\n    );\n  }\n\n  /**\n   * Returns the visible text content from an element and its descendants.\n   *\n   * @param {Element} element The element whose visible text we want.\n   * @param {Element} closest The closest parent to reach while checking\n   *   for visibility.\n   * @param {?CSSStyleDeclaration} style The computed style of element. If\n   *   falsey it will be queried.\n   * @param {Element} parentOverflowNode The closest parent with overflow hidden\n   * @param {?Object} conf Configuration object\n   * @param {?Number} conf.boxMargin The optional parameter that\n   *   can be used to specify how much to stretch the bounding box of the\n   *   overflow parent in pixels. Used to counter the hiding methods that\n   *   involve pushing decoy elements outside an overflow-y:hidden parent\n   *   to make them invisible. Default is 2 pixels.\n   * @returns {string} The text that is visible.\n   * @private\n   */\n  function getVisibleContent(element,\n                             closest,\n                             style,\n                             parentOverflowNode,\n                             {boxMargin = 2} = {}) {\n    let checkClosest = !style;\n    if (checkClosest)\n      style = getComputedStyle(element);\n\n    if (!isVisible(element, style, checkClosest && closest))\n      return \"\";\n\n    if (!parentOverflowNode &&\n      (\n        $(style).getPropertyValue(\"overflow-x\") === \"hidden\" ||\n        $(style).getPropertyValue(\"overflow-y\") === \"hidden\"\n      )\n    )\n      parentOverflowNode = element;\n\n    let text = getPseudoContent(element, \":before\");\n    for (let node of $(element).childNodes) {\n      switch ($(node).nodeType) {\n        case ELEMENT_NODE:\n          text += getVisibleContent(node,\n                                    element,\n                                    getComputedStyle(node),\n                                    parentOverflowNode,\n                                    {boxMargin});\n          break;\n        case TEXT_NODE:\n          // If there is a parent with overflow:hidden, it is possible to push\n          // elements out of the boundary box of that parent to make them\n          // invisible. This clause checks against that. We fallback to the\n          // current behaviour if no overflow parent.\n          if (parentOverflowNode) {\n            if (isContained(element, parentOverflowNode, {boxMargin}) &&\n              isTextVisible(element, style))\n              text += $(node).nodeValue;\n          }\n          else if (isTextVisible(element, style)) {\n            text += $(node).nodeValue;\n          }\n          break;\n      }\n    }\n    return text + getPseudoContent(element, \":after\");\n  }\n  const boxMarginStr = optionalParameters.get(\"-snippet-box-margin\");\n  const boxMargin = parseFloat(boxMarginStr) || 0;\n\n  let re = toRegExp(search);\n  let seen = new WeakSet();\n\n  const mo = hideIfMatches(\n    (element, closest) => {\n      if (seen.has(element))\n        return false;\n\n      seen.add(element);\n      let text = getVisibleContent(element, closest, null, null, {boxMargin});\n      let result = re.test(text);\n      if (debug() && text.length)\n        log(result, re, text);\n      return result;\n    },\n    selector,\n    searchSelector\n  );\n  mo.race(raceWinner(\n    \"hide-if-contains-visible-text\",\n    () => {\n      mo.disconnect();\n    }\n  ));\n}\n","import $ from \"../$.js\";\n\nimport {$$, getComputedCSSText, hideElement} from \"../utils/dom.js\";\nimport {raceWinner} from \"../introspection/race.js\";\nimport {toRegExp} from \"../utils/general.js\";\n\nlet {MutationObserver} = $(window);\n\n/**\n * Hides any HTML element or one of its ancestors matching a CSS selector if a\n * descendant of the element matches a given CSS selector and, optionally, if\n * the element's computed style contains a given string.\n * @alias module:content/snippets.hide-if-has-and-matches-style\n *\n * @param {string} search The CSS selector against which to match the\n *   descendants of HTML elements.\n * @param {string} selector The CSS selector that an HTML element must match\n *   for it to be hidden.\n * @param {?string} [searchSelector] The CSS selector that an HTML element\n *   containing the specified descendants must match. Defaults to the value of\n *   the `selector` argument.\n * @param {?string} [style] The string that the computed style of an HTML\n *   element matching `selector` must contain. If the string begins and ends\n *   with a slash (`/`), the text in between is treated as a regular\n *   expression.\n * @param {?string} [searchStyle] The string that the computed style of an HTML\n *   element matching `searchSelector` must contain. If the string begins and\n *   ends with a slash (`/`), the text in between is treated as a regular\n *   expression.\n *\n * @since Adblock Plus 3.4.2\n */\nexport function hideIfHasAndMatchesStyle(search, selector = \"*\",\n                                         searchSelector = null, style = null,\n                                         searchStyle = null) {\n  if (searchSelector == null)\n    searchSelector = selector;\n\n  let styleRegExp = style ? toRegExp(style) : null;\n  let searchStyleRegExp = searchStyle ? toRegExp(searchStyle) : null;\n\n  let callback = () => {\n    for (let element of $$(searchSelector)) {\n      if ($(element).querySelector(search) &&\n          (!searchStyleRegExp ||\n           searchStyleRegExp.test(getComputedCSSText(element)))) {\n        let closest = $(element).closest(selector);\n        if (closest && (!styleRegExp ||\n                        styleRegExp.test(getComputedCSSText(closest)))) {\n          win();\n          hideElement(closest);\n        }\n      }\n    }\n  };\n\n  let mo = new MutationObserver(callback);\n  let win = raceWinner(\n    \"hide-if-has-and-matches-style\",\n    () => mo.disconnect()\n  );\n  mo.observe(document, {childList: true, subtree: true});\n  callback();\n}\n","import $ from \"../$.js\";\n\nimport {$$, hideElement, isVisible} from \"../utils/dom.js\";\nimport {raceWinner} from \"../introspection/race.js\";\nimport {toRegExp} from \"../utils/general.js\";\n\nlet {getComputedStyle, MutationObserver, WeakSet} = $(window);\n\n/**\n * Hides any HTML element that uses an `aria-labelledby`, or one of its\n * ancestors, if the related aria element contains the searched text.\n * @alias module:content/snippets.hide-if-labelled-by\n *\n * @param {string} search The string to look for in HTML elements. If the\n *   string begins and ends with a slash (`/`), the text in between is treated\n *   as a regular expression.\n * @param {string} selector The CSS selector of an HTML element that uses as\n *   `aria-labelledby` attribute.\n * @param {?string} [searchSelector] The CSS selector of an ancestor of the\n *   HTML element that uses as `aria-labelledby` attribute. Defaults to the\n *   value of the `selector` argument.\n *\n * @since Adblock Plus 3.9\n */\nexport function hideIfLabelledBy(search, selector, searchSelector = null) {\n  let sameSelector = searchSelector == null;\n\n  let searchRegExp = toRegExp(search);\n\n  let matched = new WeakSet();\n\n  let callback = () => {\n    for (let node of $$(selector)) {\n      let closest = sameSelector ?\n                    node :\n                    $(node).closest(searchSelector);\n      if (!closest || !isVisible(node, getComputedStyle(node), closest))\n        continue;\n\n      let attr = $(node).getAttribute(\"aria-labelledby\");\n      let fallback = () => {\n        if (matched.has(closest))\n          return;\n\n        if (searchRegExp.test(\n          $(node).getAttribute(\"aria-label\") || \"\"\n        )) {\n          win();\n          matched.add(closest);\n          hideElement(closest);\n        }\n      };\n\n      if (attr) {\n        for (let label of $(attr).split(/\\s+/)) {\n          let target = $(document).getElementById(label);\n          if (target) {\n            if (!matched.has(target) && searchRegExp.test(target.innerText)) {\n              win();\n              matched.add(target);\n              hideElement(closest);\n            }\n          }\n          else {\n            fallback();\n          }\n        }\n      }\n      else {\n        fallback();\n      }\n    }\n  };\n\n  let mo = new MutationObserver(callback);\n  let win = raceWinner(\n    \"hide-if-labelled-by\",\n    () => mo.disconnect()\n  );\n  mo.observe(document, {characterData: true, childList: true, subtree: true});\n  callback();\n}\n","import $ from \"../$.js\";\n\nlet {Math, setInterval, chrome, isExtensionContext, performance} = $(window);\n\n/**\n * Default profile(\"...\") returned object when profile mode is disabled.\n * @type {Profiler}\n * @private\n */\nconst noopProfile = {\n  mark() {},\n  end() {},\n  toString() {\n    return \"{mark(){},end(){}}\";\n  }\n};\n\n/**\n * Whether profile mode is inactive.\n * @type {boolean}\n * @private\n */\nlet inactive = true;\n\n/**\n * Tells if the profile is inactive.\n * @memberOf module:content/snippets.profile\n * @returns {boolean}\n */\nexport function inactiveProfile() {\n  return inactive;\n}\n\n/**\n * Enables profile mode.\n * @alias module:content/snippets.profile\n * @since Adblock Plus 3.9\n *\n * @example\n * example.com#$#profile; log 'Hello, world!'\n */\nexport function setProfile() {\n  inactive = false;\n}\n\n/**\n * @typedef {object} Profiler\n * @property {function} mark Add a `performance.mark(uniqueId)` entry.\n * @property {function} end Measure and clear `uniqueId` related marks. If a\n * `true` value is passed as argument, clear related interval and process all\n * collected samples since the creation of the profiler.\n * @private\n */\n\n/**\n * Create an object with `mark()` and `end()` methods to either keep marking a\n * specific profiled name, or ending it.\n *\n * @example\n * let {mark, end} = profile('console.log');\n * mark();\n * console.log(1, 2, 3);\n * end();\n *\n * @param {string} id the callback name or unique ID to profile.\n * @param {number} [rate] The number of times per minute to process samples.\n * @returns {Profiler} The profiler with `mark()` and `end(clear = false)`\n * methods.\n * @private\n */\nexport function profile(id, rate = 10) {\n  if (inactive || !isExtensionContext)\n    return noopProfile;\n\n  function processSamples() {\n    let samples = $([]);\n\n    for (let {name, duration} of performance.getEntriesByType(\"measure\"))\n      samples.push({name, duration});\n\n    if (samples.length) {\n      performance.clearMeasures();\n\n      chrome.runtime.sendMessage({\n        type: \"ewe:profiler.sample\",\n        category: \"snippets\",\n        samples\n      });\n    }\n  }\n\n  // avoid creation of N intervals when the same id is used\n  // over and over (i.e. within loops or multiple profile calls)\n  if (!profile[id]) {\n    profile[id] = setInterval(processSamples,\n                              Math.round(60000 / Math.min(60, rate)));\n  }\n\n  return {\n    mark() {\n      performance.mark(id);\n    },\n    end(clear = false) {\n      performance.measure(id, id);\n      performance.clearMarks(id);\n      if (clear) {\n        clearInterval(profile[id]);\n        delete profile[id];\n        processSamples();\n      }\n    }\n  };\n}\n","import $ from \"../$.js\";\n\nimport {hideElement, initQueryAndApply} from \"../utils/dom.js\";\nimport {profile} from \"../introspection/profile.js\";\nimport {raceWinner} from \"../introspection/race.js\";\n\nlet {MutationObserver} = $(window);\n\nconst {ELEMENT_NODE} = Node;\n\n/**\n * Hide a specific element through a XPath 1.0 query string.\n * See {@tutorial xpath-filters} to know more.\n * @alias module:content/snippets.hide-if-matches-xpath\n *\n * @param {string} query The XPath query that targets the element to hide.\n *\n * @since Adblock Plus 3.9.0\n */\nexport function hideIfMatchesXPath(query) {\n  let {mark, end} = profile(\"hide-if-matches-xpath\");\n\n  let queryAndApply = initQueryAndApply(`xpath(${query})`);\n\n  let callback = () => {\n    mark();\n\n    queryAndApply(node => {\n      win();\n      if ($(node).nodeType === ELEMENT_NODE)\n        hideElement(node);\n      else\n        $(node).textContent = \"\";\n    });\n\n    end();\n  };\n\n  let mo = new MutationObserver(callback);\n  let win = raceWinner(\n    \"hide-if-matches-xpath\",\n    () => mo.disconnect()\n  );\n  mo.observe(document, {characterData: true, childList: true, subtree: true});\n  callback();\n}\n","import $ from \"../$.js\";\nimport {caller} from \"proxy-pants/function\";\n\nimport {profile} from \"../introspection/profile.js\";\nimport {getDebugger} from \"../introspection/log.js\";\nimport {randomId} from \"../utils/general.js\";\nimport {$$, hideElement} from \"../utils/dom.js\";\nimport {raceWinner} from \"../introspection/race.js\";\n\nlet {\n  chrome,\n  getComputedStyle,\n  isExtensionContext,\n  parseFloat,\n  Array,\n  MutationObserver,\n  Object,\n  WeakSet\n} = $(window);\n\n\n// The logic in this file requires best possible performance. Accordingly,\n// instead of promoting every Array as secured Array, methods trapped as caller\n// from the Array.prototype are used instead, which is faster than using a\n// setPrototypeOf(eachReference) multiple times.\n// This is hence an exception to the usual `$([])` pattern.\nlet {\n  filter,\n  map,\n  push,\n  reduce,\n  some\n} = caller(window.Array.prototype);\n\n/**\n * Hides any HTML element if its structure (graph) is classified as an ad\n * by a built-in machine learning model.\n * @alias module:content/snippets.hide-if-graph-matches\n *\n * @param {string} selector A selector that produces a list of targets to\n * classify.\n * @param {string} tagName An HTML tag name to filter mutations.\n *\n * @since Adblock Plus 3.11.3\n */\nexport function hideIfGraphMatches(selector, tagName) {\n  let scheduled = false;\n  let seenMlTargets = new WeakSet();\n  let relevantTagName = tagName;\n  let callback = mutations => {\n    for (let mutation of $(mutations)) {\n      let {target} = $(mutation, \"MutationRecord\");\n      if ($(target).tagName == relevantTagName) {\n        if (!scheduled) {\n          scheduled = true;\n          requestAnimationFrame(() => {\n            scheduled = false;\n            predictAds(win, selector, seenMlTargets);\n          });\n        }\n        break;\n      }\n    }\n  };\n\n  let mo = new MutationObserver(callback);\n  let win = raceWinner(\n    \"hide-if-graph-matches\",\n    () => mo.disconnect()\n  );\n  mo.observe(document, {childList: true, subtree: true});\n  predictAds(win, selector, seenMlTargets);\n}\n\nconst GRAPH_CUT_OFF = 50;\nconst THRESHOLD = 0.5;\n\n// See https://github.com/mozilla/webextension-polyfill/issues/130\nconst CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE =\n        \"The message port closed before a response was received.\";\n\nconst sendMessage = message => new Promise((resolve, reject) => {\n  chrome.runtime.sendMessage(message, response => {\n    if (chrome.runtime.lastError) {\n      if (\n        chrome.runtime.lastError.message ===\n        CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE\n      )\n        resolve();\n      else\n        reject(new Error(chrome.runtime.lastError.message));\n    }\n    else {\n      resolve(response);\n    }\n  });\n});\n\n\n/**\n * Builds an adjecency matrix and a feature matrix based on an input element.\n * @param {Element} target Input element to convert.\n * @returns {Tuple} (adjMatrix, elementTags) - a 2D array that represent an\n * adjacency matrix of an element. HTML elements are undirected trees, so the\n * adjacency matrix is symmetric.\n * elementTags - a 1D feature matrix, where each element is represents a type\n * of a node.\n * @private\n */\nfunction processElement(target) {\n  let {adjacencyMatrix, features} = addEdgesFeatures(target, GRAPH_CUT_OFF);\n  return {adjacencyMatrix, features};\n}\n\n/**\n * Runs a ML prediction on each element that matches a selector.\n * @param {function} win A callback used to flag a matched case/element.\n * @param {string} selector A selector to use for finding candidates.\n * @param {WeakSet} seenMlTargets Matched elements to ignore.\n *\n * @private\n */\nfunction predictAds(win, selector, seenMlTargets) {\n  let debugLog = getDebugger(\"hide-if-graph-matches\");\n\n  let targets = $$(selector);\n  for (let target of targets) {\n    if (seenMlTargets.has(target))\n      continue;\n\n    if ($(target).innerText == \"\")\n      continue;\n\n    seenMlTargets.add(target);\n    let processedElement = processElement(target);\n    // as this call is asynchronous, ensure the id is unique\n    let {mark, end} = profile(`ml:inference:${randomId()}`);\n    mark();\n    let message = {\n      type: \"ewe:ml-inference\",\n      inputs: [\n        {\n          data: [processedElement.adjacencyMatrix], preprocess: [\n            {funcName: \"padAdjacency\", args: GRAPH_CUT_OFF},\n            {funcName: \"unstack\"},\n            {funcName: \"localPooling\"},\n            {funcName: \"stack\"}\n          ]\n        },\n        {\n          data: [processedElement.features], preprocess: [\n            {funcName: \"padFeatures\", args: GRAPH_CUT_OFF},\n            {funcName: \"cast\", args: \"float32\"}\n          ]\n        }\n      ],\n      model: \"hideIfGraphMatches\"\n    };\n\n    let process = function(rawPrediction) {\n      // Some extensions are shipped without models\n      // in which case there won't be a response.\n      if (!rawPrediction)\n        return;\n\n      let predictionValues = Object.values(rawPrediction);\n\n      if (!some(predictionValues, value => value > 0))\n        debugLog(\"Error: ML prediction results are corrupted\");\n\n      // normalize prediction values\n      let norm = reduce(\n        predictionValues,\n        (acc, val) => acc + val,\n        0\n      );\n      let normPredictionValues = map(\n        predictionValues,\n        val => val / norm\n      );\n      let result = map(\n        filter(normPredictionValues, (_, index) => index % 2 == 1),\n        element => element > THRESHOLD\n      );\n\n      if (result[0]) {\n        debugLog(\"Detected ad: \" + $(target).innerText);\n        win();\n        hideElement(target);\n      }\n    };\n\n    if (isExtensionContext) {\n      sendMessage(message)\n      .then(response => {\n        if (response) {\n          process(response);\n          debugLog(response);\n        }\n        else {\n          // Compatibility for legacy adblockpluschrome\n          message.type = \"ml.inference\";\n          sendMessage(message)\n            .then(process)\n            .catch(debugLog);\n        }\n        end(true);\n      })\n      .catch(debugLog);\n    }\n  }\n}\n\n/**\n * Defines a structure for individual node in the Graph used for ML module.\n */\nclass GraphNode {\n  /**\n   * Initializes a Node with the tag name and attributed related to the node.\n   * @param {string} tag - name of the tag which represents the node\n   * @param {Object} attributes - attributes related to the node\n   * @private\n   */\n  constructor(tag, attributes) {\n    this.tag = tag;\n    this.attributes = attributes;\n    this.children = [];\n    this.elementHidden = false;\n    this.elementBlocked = false;\n    this.filter = null;\n    this.requestType = null;\n    this.height = 0;\n    this.width = 0;\n    this.cssSelectors = null;\n  }\n\n  /**\n   * Adds a child node to the current GraphNode.\n   * @param {GraphNode} newChild - the child node to be added.\n   */\n  addChild(newChild) {\n    push(this.children, newChild);\n  }\n}\n\nconst IMPORTANT_NODE_ATTRIBUTES = [\"style\"];\n\n/**\n * Returns a new Object of attributes with only the important ones.\n * @param {Object} object - attributes to be filtered\n *\n * @return {Object} - the filtered attributes\n */\nfunction cloneObject(object) {\n  let newObject = {};\n\n  for (let attr in object) {\n    if (object[attr])\n      newObject[attr] = object[attr];\n  }\n\n  return newObject;\n}\n\n/**\n * Given a DOM tree, returns the adjacency matrix and features array after\n * doing DFS through the graph.\n *\n * @param {Object} target - the node to start the DFS from\n * @param {number} cutoff - the maximum number of nodes to be added.\n *\n * @returns {Object} - the adjacency matrix and features array\n */\nfunction addEdgesFeatures(target, cutoff) {\n  // Create adjacency matrix and initialize it with '0's\n  let emptyMatrix = new Array(cutoff);\n  for (let i = 0; i < cutoff; i++)\n    emptyMatrix[i] = new Array(cutoff).fill(0);\n  let adjacencyMatrix = emptyMatrix;\n  let features = [];\n\n  let numOfElements = 0;\n\n  /**\n   * DFS through the DOM tree and creates GraphNode, which is used for\n   * generating features and adjacency matrix.\n   *\n   * @param {Object} element - the node to process in one step of DFS\n   * @param {GraphNode} parentNode - the parent node of the current nodeId\n   */\n  function domToGraph(element, parentNode) {\n    if (numOfElements >= cutoff)\n      return;\n\n    let attributes = {};\n\n    // Get all the attributes\n    for (let attr of $(element).attributes)\n      attributes[$(attr).name] = $(attr).value;\n\n    for (let attr of IMPORTANT_NODE_ATTRIBUTES)\n      attributes[attr] = cloneObject(element[attr]);\n\n    // Create the graph object\n    let node = new GraphNode(element.tagName, attributes);\n\n    // Add CSS selectors and size attributes\n    node.cssSelectors = getComputedStyle(element).cssText;\n    node.height = element.clientHeight;\n    node.width = element.clientWidth;\n\n    // Add nodeId\n    node.nodeId = numOfElements;\n    numOfElements += 1;\n\n    if (parentNode !== null) {\n      adjacencyMatrix[parentNode.nodeId][node.nodeId] = 1;\n      adjacencyMatrix[node.nodeId][parentNode.nodeId] = 1;\n    }\n\n    // Add node level, parent node id, siblings\n    if (parentNode == null) {\n      node.nodeLevel = 0;\n      node.parentNodeId = 0;\n      node.siblings = 0;\n    }\n    else {\n      node.nodeLevel = parentNode.nodeLevel + 1;\n      node.parentNodeId = parentNode.nodeId;\n      node.siblings = parentNode.children.length;\n    }\n\n    // Add children\n    node.numChildren = element.children.length;\n\n    // add src and reqtype\n    // eslint-disable-next-line no-prototype-builtins\n    if (node.attributes.hasOwnProperty(\"src\") &&\n    // eslint-disable-next-line no-undefined\n      node.attributes[\"src\"] !== undefined) {\n      node.attributes[\"src_level\"] = 0;\n    }\n    else if (parentNode !== null &&\n        Object.values(parentNode.attributes).length !== 0 &&\n        // eslint-disable-next-line no-prototype-builtins\n        parentNode.attributes.hasOwnProperty(\"src\") &&\n        // eslint-disable-next-line no-undefined\n        parentNode.attributes[\"src\"] !== undefined) {\n      node.attributes[\"src\"] = parentNode.attributes[\"src\"];\n      node.attributes[\"src_level\"] = parentNode.attributes[\"src_level\"] + 1;\n      node[\"requestType\"] = parentNode[\"requestType\"];\n    }\n\n    // call feature generator\n    node.features = new featureGenerator().\n    getNodeFeatures(node, location.href, true, true, true, true);\n\n    push(features, node.features);\n\n    // DFS through the children\n    for (let child of element.children)\n      domToGraph(child, node);\n  }\n\n  domToGraph(target, null);\n\n  return {adjacencyMatrix, features};\n}\n\n/**\n * Function to generate an eye matrix\n * @param {number} n - size of the matrix\n * @returns {Array} - the eye matrix\n */\nlet eye = function(n) {\n  let matrix = [];\n  for (let i = 0; i < n; i++) {\n    let content = [];\n    for (let k = 0; k < n; k++)\n      push(content, i === k ? 1 : 0);\n    push(matrix, content);\n  }\n  return matrix;\n};\n\nconst DISPLAY_ATTR_MAP = {\"none\": 1, \"inline\": 2,\n                          \"block\": 3, \"inline-block\": 4, \"inherit\": 5};\n\nconst ONE_HOT_DISPLAY_LEN = 5;\n\nconst NUM_CSS_SELECTORS = 55;\n\nconst CSS_COLORS = [\"background-color\", \"border-bottom-color\",\n                    \"border-left-color\", \"border-right-color\",\n                    \"border-top-color\", \"color\", \"outline-color\",\n                    \"text-decoration\", \"text-decoration-color\",\n                    \"column-rule-color\", \"-webkit-text-emphasis-color\",\n                    \"-webkit-text-fill-color\", \"-webkit-text-stroke-color\",\n                    \"caret-color\"];\n\nconst CSS_PIXELS = [\"border-bottom-width\", \"height\", \"min-height\",\n                    \"min-width\", \"padding-bottom\", \"padding-left\",\n                    \"padding-right\", \"padding-top\", \"width\"];\n\nconst CSS_ORIGINS = [\"perspective-origin\", \"transform-origin\"];\n\nconst REQUEST_TYPES = [\"script\", \"subdocument\", \"image\", \"xmlhttprequest\",\n                       \"font\", \"document\", \"stylesheet\", \"other\", \"ping\",\n                       \"websocket\", \"media\", \"object\"];\n\nlet requestTypesDict = {};\nconst reqtypeVEC = eye(REQUEST_TYPES.length);\n\nfor (let ob in REQUEST_TYPES)\n  requestTypesDict[REQUEST_TYPES[ob]] = reqtypeVEC[ob];\n\n\nconst URL_CHARS =\n// eslint-disable-next-line no-useless-escape\n  \" abcdefghijklmnopqrstuvwxyz1234567890:;/?!=+.,()[]-`*_\\|~\".split(\"\");\n\nlet wordIndex = {};\n\nlet charEncoderIndex = 1;\nURL_CHARS.forEach(char => {\n  wordIndex[char] = charEncoderIndex;\n  charEncoderIndex += 1;\n});\n\n/**\n * featureGenerator to generate features for the nodes\n */\nlet featureGenerator = function() {\n  let appendFeatures = function(features, arr) {\n    map(arr, el => push(features, el));\n  };\n\n  /**\n   * Generates a sequence for a given string based on a wordIndex\n   *\n   * @param {string} st - the string to generate the sequence for\n   * @param {number} maxLen - the maximum length of the sequences\n   * @returns {Array} - the generated sequence\n   */\n  let getStringSeq = function(st, maxLen) {\n    let seq = [];\n    st = st.split(\"\");\n    st.forEach(char => {\n      // eslint-disable-next-line no-prototype-builtins\n      push(seq, wordIndex.hasOwnProperty(char) ?\n        wordIndex[char] : -1);\n    });\n    if (seq.length > maxLen)\n      return seq.slice(-maxLen);\n\n    // padding\n    appendFeatures(seq, new Array(maxLen - seq.length).fill(0));\n    return seq;\n  };\n\n  /**\n   * Gets the vector for a given tag name.\n   *\n   * @param {Object} node - The node that contains the tag\n   * @param {number} maxLen - The maximum length of the sequence\n   * @returns {Array} - The vector for the tag\n   */\n  let getTagVec = function(node, maxLen = 8) {\n    let tag = node[\"tag\"].toLowerCase();\n    let tagVec = getStringSeq(tag, maxLen);\n    return tagVec;\n  };\n  /**\n   * Returns the meta features for the domains\n   *\n   * @param {Object} node - The node that contains the domain\n   * @param {string} domain - The domain\n   * @param {string} target - target field\n   * @returns {Array} - The meta features for the domain\n   */\n  let getMetaFeatures = function(node, domain, target) {\n    // Checking for source attribute\n    let sourceIsUrl = 0.0;\n    let hasSource = 0.0;\n    let sourceIsThirdParty = 0.0;\n\n    let attrs = node[\"attributes\"];\n    // eslint-disable-next-line no-undefined\n    if (attrs !== undefined &&\n      // eslint-disable-next-line no-prototype-builtins\n      attrs.hasOwnProperty(target)) {\n      let src = attrs[target].toLowerCase();\n      hasSource = 1.0;\n      if (src.startsWith(\"http\") == true)\n        sourceIsUrl = 1.0;\n\n      let pathArray = src.split(\"/\");\n      let netloc = pathArray[2];\n      if (netloc !== domain)\n        sourceIsThirdParty = 1.0;\n    }\n    return [hasSource, sourceIsUrl, sourceIsThirdParty];\n  };\n\n  /**\n   * Gets rgb features for a given rgb_string\n   *\n   * @param {String} rgbString - The rgb string\n   * @returns {Array} - The rgb features\n   */\n  let getRgb = function(rgbString) {\n    // Extract and normalize RGB colors from a CSS string\n    let regex = /rgba?\\((\\d+), (\\d+), (\\d+)\\)/g;\n    let rgbColors = regex.exec(rgbString);\n\n    if (rgbColors) {\n      return [parseFloat(rgbColors[1]),\n              parseFloat(rgbColors[2]),\n              parseFloat(rgbColors[3])];\n    }\n    return [0.0, 0.0, 0.0];\n  };\n\n  /**\n   * Gets pixels from a pixel strings\n   *\n   * @param {String} pxString - The pixel string\n   * @returns {Array} - The pixels\n   */\n  let getPixels = function(pxString) {\n    let regex = /(\\d*?\\.?\\d*)px/g;\n    let pixel = regex.exec(pxString);\n\n    if (pixel)\n      return [parseFloat(pixel[1])];\n\n    return [0.0];\n  };\n\n  /**\n   * Gets origins for a css coordinate string\n   *\n   * @param {String} originString - The css string\n   * @returns {Array} - The origins\n   */\n  let getOrigins = function(originString) {\n    let regex = /(\\d*?\\.?\\d*)px (\\d*?\\.?\\d*)px/g;\n    let origin = regex.exec(originString);\n\n    if (origin)\n      return [parseFloat(origin[1]), parseFloat(origin[2])];\n\n    return [0.0, 0.0];\n  };\n\n  /**\n   * Returns the css features for a given node\n   *\n   * @param {Object} node - The node that contains the css\n   * @returns {Array} - The css features\n   */\n  let getCssFeatures = function(node) {\n    let css = node[\"cssSelectors\"];\n\n    if (!css)\n      return new Array(NUM_CSS_SELECTORS).fill(0.0);\n\n    let cssAttrs = {};\n    let spl = css.split(\"; \");\n\n    for (let element in spl) {\n      let el = spl[element].split(\":\");\n\n      let x = el[0];\n      let y = el[1];\n      // eslint-disable-next-line no-undefined\n      if (x !== undefined && y !== undefined)\n        cssAttrs[x.trim()] = y.trim();\n    }\n\n\n    let cssFeatures = [];\n\n    for (let color in CSS_COLORS) {\n      // eslint-disable-next-line no-prototype-builtins\n      let cssColors = cssAttrs.hasOwnProperty(CSS_COLORS[color]) ?\n           getRgb(cssAttrs[CSS_COLORS[color]]) : [0.0, 0.0, 0.0];\n      appendFeatures(cssFeatures, cssColors);\n    }\n    for (let px in CSS_PIXELS) {\n      // eslint-disable-next-line no-prototype-builtins\n      let cssPixels = cssAttrs.hasOwnProperty(CSS_PIXELS[px]) ?\n          getPixels(cssAttrs[CSS_PIXELS[px]]) : [0.0];\n      appendFeatures(cssFeatures, cssPixels);\n    }\n    for (let origin in CSS_ORIGINS) {\n      // eslint-disable-next-line no-prototype-builtins\n      let cssOrigins = cssAttrs.hasOwnProperty(CSS_ORIGINS[origin]) ?\n          getOrigins(cssAttrs[CSS_ORIGINS[origin]]) : [0.0, 0.0];\n      appendFeatures(cssFeatures, cssOrigins);\n    }\n\n    return cssFeatures;\n  };\n  /**\n   * Returns all style features including css features\n   *\n   * @param {Object} node - The node that contains the features to be extracted\n   * @returns {Array} - The style features\n   */\n  let getStyleFeatures = function(node) {\n    // eslint-disable-next-line no-prototype-builtins\n    let attrs = node.hasOwnProperty(\"attributes\") ?\n      node[\"attributes\"] : {};\n    // eslint-disable-next-line no-prototype-builtins\n    let styleAttrs = attrs.hasOwnProperty(\"style\") ?\n      attrs[\"style\"] : {};\n\n    // eslint-disable-next-line no-prototype-builtins\n    let offsetHeight = styleAttrs.hasOwnProperty(\"offsetHeight\") ?\n      styleAttrs[\"offsetHeight\"] : \"0\";\n\n    if (offsetHeight)\n      offsetHeight = parseFloat(offsetHeight.trim());\n\n    // eslint-disable-next-line no-prototype-builtins\n    let offsetWidth = styleAttrs.hasOwnProperty(\"offsetWidth\") ?\n      styleAttrs[\"offsetWidth\"] : \"0\";\n\n    if (offsetWidth)\n      offsetWidth = parseFloat(offsetWidth.trim());\n\n    // eslint-disable-next-line no-prototype-builtins\n    let displayAttr = styleAttrs.hasOwnProperty(\"display\") ?\n      styleAttrs[\"display\"] : \"-1\";\n\n    if (displayAttr)\n      displayAttr.trim().toLowerCase();\n\n    // eslint-disable-next-line no-prototype-builtins\n    displayAttr = DISPLAY_ATTR_MAP.hasOwnProperty(displayAttr) ?\n      DISPLAY_ATTR_MAP[displayAttr] : 0;\n\n    let displayVec = new Array(ONE_HOT_DISPLAY_LEN).fill(0);\n\n    if (displayAttr > 0)\n      displayVec[displayAttr - 1] = 1;\n\n    let styleFeatures = [offsetHeight, offsetWidth];\n    appendFeatures(styleFeatures, displayVec);\n\n    // eslint-disable-next-line no-prototype-builtins\n    let fontSize = styleAttrs.hasOwnProperty(\"font-size\") ?\n      styleAttrs[\"font-size\"] : 0;\n\n    if (fontSize)\n      fontSize = parseFloat(fontSize.trim().toLowerCase().replace(\"px\", \"\"));\n\n    push(styleFeatures, fontSize);\n    return styleFeatures;\n  };\n\n  /**\n   * Given a node, generates all features related to it.\n   *\n   * @param {Object} node - The node that contains the features to be extracted\n   * @param {string} domain - The domain of the node\n   * @param {boolean} topLevel - Whether to include top_level features\n   * @param {boolean} attributes - Whether to include attributes features\n   * @param {boolean} style - Whether to include style features\n   * @param {boolean} css - Whether to include css features\n   *\n   * @returns {Array} - The features\n   */\n  this.getNodeFeatures = function(node, domain,\n                                  topLevel = true, attributes = false,\n                                  style = false, css = false) {\n    let features = [];\n\n    if (topLevel == true) {\n      // Add node ids\n      push(features, node.nodeId);\n\n      // Add parent ids\n      push(features, node.parentNodeId);\n\n      // Add siblings\n      push(features, node.siblings);\n\n      // Get the tag ID as an one hot vector\n      appendFeatures(features, getTagVec(node));\n\n      // level\n      push(features, node.nodeLevel);\n\n      // children\n      push(features, node.numChildren);\n\n      // eslint-disable-next-line no-prototype-builtins\n      let reqType = node.hasOwnProperty(\"requestType\") ?\n        node[\"requestType\"] : null;\n\n      if (reqType !== null)\n        reqType = reqType.toLowerCase();\n\n      let reqTypeVec = new Array(REQUEST_TYPES.length).fill(0);\n      // eslint-disable-next-line no-prototype-builtins\n      if (reqType !== null && requestTypesDict.hasOwnProperty(reqType))\n        reqTypeVec = requestTypesDict[reqType];\n      appendFeatures(features, reqTypeVec);\n    }\n\n    if (attributes == true) {\n      // Get source sequence\n      // eslint-disable-next-line no-prototype-builtins\n      let attrs = node.hasOwnProperty(\"attributes\") ?\n        // eslint-disable-next-line no-undefined\n         node[\"attributes\"] : undefined;\n\n      let src = \"\";\n      // eslint-disable-next-line no-undefined\n      if (attrs != undefined &&\n        // eslint-disable-next-line no-prototype-builtins\n        attrs.hasOwnProperty(\"src\")) {\n        src = attrs[\"src\"];\n        src = src.trim().toLowerCase();\n      }\n      appendFeatures(features, getStringSeq(src, 256));\n\n      // Get source meta attributes\n      appendFeatures(features, getMetaFeatures(node, domain, \"src\"));\n\n      // Get href sequence\n      let href = \"\";\n      // eslint-disable-next-line no-undefined\n      if (attrs != undefined &&\n        // eslint-disable-next-line no-prototype-builtins\n        attrs.hasOwnProperty(\"href\")) {\n        href = attrs[\"href\"];\n        href = href.trim().toLowerCase();\n      }\n      appendFeatures(features, getStringSeq(href, 256));\n\n      // Get href meta attributes\n      appendFeatures(features, getMetaFeatures(node, domain, \"href\"));\n\n      // Get id sequence\n      let id = \"\";\n      // eslint-disable-next-line no-undefined\n      if (attrs != undefined &&\n          // eslint-disable-next-line no-prototype-builtins\n          attrs.hasOwnProperty(\"id\")) {\n        id = attrs[\"id\"];\n        id = id.trim().toLowerCase();\n        // replace punct and collapse whitespace\n        // eslint-disable-next-line no-useless-escape, no-irregular-whitespace\n        id = id.replace(/[!\"'\\(\\)\\*,\\-\\.\\/:;\\?\\[\\\\\\]\\^_`\\{\\|\\}~“” ]/g, \" \").replace(/\\s+/g, \" \");\n      }\n      appendFeatures(features, getStringSeq(id, 16));\n\n      // Get class sequence\n      let clas = \"\";\n      // eslint-disable-next-line no-undefined\n      if (attrs != undefined &&\n          // eslint-disable-next-line no-prototype-builtins\n          attrs.hasOwnProperty(\"class\")) {\n        clas = attrs[\"class\"];\n        clas = clas.trim().toLowerCase();\n        // replace punct and collapse whitespace\n        // eslint-disable-next-line no-useless-escape, no-irregular-whitespace\n        clas = clas.replace(/[!\"'\\(\\)\\*,\\-\\.\\/:;\\?\\[\\\\\\]\\^_`\\{\\|\\}~“” ]/g, \" \").replace(/\\s+/g, \" \");\n      }\n      appendFeatures(features, getStringSeq(clas, 16));\n    }\n    if (style == true)\n      appendFeatures(features, getStyleFeatures(node));\n\n    // Get CSS style features\n    if (css == true)\n      appendFeatures(features, getCssFeatures(node));\n\n    return features;\n  };\n};\n","import {simulateEvent} from \"../content/behavioral/simulate-event-poc.js\";\nimport {hideIfContains} from\n  \"../content/conditional-hiding/hide-if-contains.js\";\nimport {hideIfContainsAndMatchesStyle} from\n  \"../content/conditional-hiding/hide-if-contains-and-matches-style.js\";\nimport {hideIfContainsImage} from\n  \"../content/conditional-hiding/hide-if-contains-image.js\";\nimport {hideIfContainsSimilarText} from\n  \"../content/conditional-hiding/hide-if-contains-similar-text.js\";\nimport {hideIfContainsVisibleText} from\n  \"../content/conditional-hiding/hide-if-contains-visible-text.js\";\nimport {hideIfHasAndMatchesStyle} from\n  \"../content/conditional-hiding/hide-if-has-and-matches-style.js\";\nimport {hideIfLabelledBy} from\n  \"../content/conditional-hiding/hide-if-labelled-by.js\";\nimport {hideIfMatchesXPath} from\n  \"../content/conditional-hiding/hide-if-matches-xpath.js\";\nimport {hideIfGraphMatches} from\n  \"../content/conditional-hiding/hide-if-graph-matches.js\";\nimport {setDebug} from \"../content/introspection/debug.js\";\nimport {log} from \"../content/introspection/log.js\";\nimport {race} from \"../content/introspection/race.js\";\nimport {setProfile} from \"../content/introspection/profile.js\";\n\nexport const snippets = {\n  log,\n  race,\n  \"debug\": setDebug,\n  \"profile\": setProfile,\n  \"hide-if-matches-xpath\": hideIfMatchesXPath,\n  \"hide-if-contains\": hideIfContains,\n  \"hide-if-contains-similar-text\": hideIfContainsSimilarText,\n  \"hide-if-contains-visible-text\": hideIfContainsVisibleText,\n  \"hide-if-contains-and-matches-style\": hideIfContainsAndMatchesStyle,\n  \"hide-if-has-and-matches-style\": hideIfHasAndMatchesStyle,\n  \"hide-if-labelled-by\": hideIfLabelledBy,\n  \"hide-if-contains-image\": hideIfContainsImage,\n  \"hide-if-graph-matches\": hideIfGraphMatches,\n  \"simulate-event-poc\": simulateEvent\n};\n\n// {\"snippet-name\": {...}} dependencies to optionally injext before snippets\n// get executed, particularly useful for machine learning or snippets with\n// huge external dependencies that should not be evaluated each time.\n// The value should be an object with fields, all serializable as per API.\n// https://developer.chrome.com/docs/extensions/reference/scripting/#injected-code\nexport const dependencies = {};\n"],"names":["$","Proxy","apply","a","bind","b","call","c","Function","callerHandler","get","target","name","caller","handler","bound","assign","defineProperties","freeze","getOwnPropertyDescriptor","getOwnPropertyDescriptors","getPrototypeOf","Object","species","Symbol","Native","Secure","proto","prototype","constructor","statics","length","value","secure","libEnvironment","environment","globalThis","window","ownKeys","Reflect","worldEnvDefined","isIsolatedWorld","world","isMainWorld","isChrome","chrome","runtime","isOtherThanChrome","browser","isExtensionContext","copyIfExtension","create","defineProperty","invokes","classes","Map","RegExp","Set","WeakMap","WeakSet","augment","source","method","known","key","includes","descriptor","primitive","Super","Class","toString","valueOf","type","toLowerCase","callback","result","this","arguments","variables","frozen","hidden","iframePropertiesToAbort","read","write","abortedIframes","startsCapitalized","console","document","performance","JSON","Math","Number","String","MouseEvent","map","has","test","set","WeakValue","helpers","ws","wm","wv","any","add","setTimeout","env","cleanup","cleanUpCallback","clear","transformOnce","super","concat","join","reduce","unshift","descriptors","chain","current","chained","Array","isArray","setPrototypeOf","slice","getBrand","nodeType","Node","Attr","CanvasRenderingContext2D","CSSStyleDeclaration","Document","Element","HTMLCanvasElement","HTMLElement","HTMLImageElement","HTMLScriptElement","MutationRecord","ShadowRoot","CSS2Properties","upgrade","hint","brand","Error","transformer","getComputedStyle","MutationObserver","XPathEvaluator","XPathExpression","XPathResult","querySelectorAll","$$","$XPathExpression","evaluate","args","$XPathEvaluator","createExpression","hideElement","element","notifyElementHidden","style","$style","properties","debugCSSProperties","setProperty","push","getPropertyValue","propertyValue","propertyPriority","getPropertyPriority","observe","attributes","attributeFilter","checkElement","initQueryAndApply","selector","$selector","startsWith","endsWith","xpathQuery","evaluator","expression","flag","ORDERED_NODE_SNAPSHOT_TYPE","cb","snapshotLength","i","snapshotItem","forEach","hideIfMatches","match","searchSelector","won","closest","race","win","childList","characterData","subtree","isVisible","visibility","parent","parentElement","getComputedCSSText","cssText","property","trim","parseInt","simulateEvent","event","delay","queryAndApply","delayInMiliseconds","dispatchedNodes","observer","findNodesAndDispatchEvents","node","dispatchEvent","bubbles","cancelable","regexEscape","string","replace","toRegExp","pattern","isCaseSensitive","randomId","floor","random","debugging","debug","setDebug","noop","log","getDebugger","stack","action","winners","participants","raceWinner","lose","debugLog","delete","looser","values","hideIfContains","search","re","mo","textContent","disconnect","hideIfContainsAndMatchesStyle","searchStyle","searchRegExp","styleRegExp","searchStyleRegExp","clearTimeout","fetch","Uint8Array","hideIfContainsImage","fetchContent","then","content","uint8ArrayToHex","fetchContentMap","url","as","uid","details","remove","timer","res","catch","toHex","number","hex","repeat","uint8Array","byte","parseFloat","min","ld","len1","len2","d","I","j","J","hideIfContainsSimilarText","ignoreChars","maxSearches","visitedNodes","$search","chars","find","sort","guard","Infinity","innerText","loop","str","substr","distance","ELEMENT_NODE","TEXT_NODE","hideIfContainsVisibleText","entries","optionalParameters","attr","markerIndex","indexOf","defaultEntries","attributesMap","isTextVisible","valueAsRegex","color","getPseudoContent","pseudo","strings","_","getAttribute","index","isContained","childNode","parentNode","boxMargin","child","getBoundingClientRect","stretchedParent","left","right","top","bottom","getVisibleContent","parentOverflowNode","checkClosest","text","childNodes","nodeValue","boxMarginStr","seen","hideIfHasAndMatchesStyle","querySelector","hideIfLabelledBy","sameSelector","matched","fallback","label","split","getElementById","setInterval","noopProfile","mark","end","inactive","setProfile","profile","id","rate","processSamples","samples","duration","getEntriesByType","clearMeasures","sendMessage","category","round","measure","clearMarks","clearInterval","hideIfMatchesXPath","query","filter","some","hideIfGraphMatches","tagName","scheduled","seenMlTargets","relevantTagName","mutations","mutation","requestAnimationFrame","predictAds","GRAPH_CUT_OFF","THRESHOLD","CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE","message","Promise","resolve","reject","response","lastError","processElement","adjacencyMatrix","features","addEdgesFeatures","targets","processedElement","inputs","data","preprocess","funcName","model","process","rawPrediction","predictionValues","norm","acc","val","normPredictionValues","GraphNode","tag","children","elementHidden","elementBlocked","requestType","height","width","cssSelectors","addChild","newChild","IMPORTANT_NODE_ATTRIBUTES","cloneObject","object","newObject","cutoff","emptyMatrix","fill","numOfElements","domToGraph","clientHeight","clientWidth","nodeId","nodeLevel","parentNodeId","siblings","numChildren","hasOwnProperty","undefined","featureGenerator","getNodeFeatures","location","href","eye","n","matrix","k","DISPLAY_ATTR_MAP","none","inline","block","inherit","ONE_HOT_DISPLAY_LEN","NUM_CSS_SELECTORS","CSS_COLORS","CSS_PIXELS","CSS_ORIGINS","REQUEST_TYPES","requestTypesDict","reqtypeVEC","ob","URL_CHARS","wordIndex","charEncoderIndex","char","appendFeatures","arr","el","getStringSeq","st","maxLen","seq","getTagVec","tagVec","getMetaFeatures","domain","sourceIsUrl","hasSource","sourceIsThirdParty","attrs","src","pathArray","netloc","getRgb","rgbString","regex","rgbColors","exec","getPixels","pxString","pixel","getOrigins","originString","origin","getCssFeatures","css","cssAttrs","spl","x","y","cssFeatures","cssColors","px","cssPixels","cssOrigins","getStyleFeatures","styleAttrs","offsetHeight","offsetWidth","displayAttr","displayVec","styleFeatures","fontSize","topLevel","reqType","reqTypeVec","clas","snippets","dependencies"],"mappings":"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"}